//背包问题,有N件物品和一个容量为V的背包,第i件物品体积为c[i],价值为w[i],将哪些物品放入背包价值最大

//最基础的背包问题，特点是：每种物品仅有一件，可以选择放或不放。设f[i][v]表示前i件物品放入容量为v的背包的最大价值,其状态转移方程为:
// f[i][v] = max{ f[i-1][v] , f[i-1][v-c[i]]+w[i] }
//               (不放第i个)   (放第i个)

//将前i件物品放入容量为v的背包中这个子问题，若只考虑第i件物品的策略(放或不放)，那么就可以转化为一个只涉及前i-1件物品的问题。如果不放第i件物品，那么问题就转化为前i-1件物品放入容量为v的背包中，价值为f[i-1][v]；
//如果放第i件物品，那么问题就转化为前i-1件物品放入剩下的容量为v-c[i]的背包中，此时能获得的最大价值就是:  f[i-1][v-c[i]]+w[i]。

function sortUp(){
	var c=[0,2,2,6,5,4];
	var w=[0,6,3,5,4,6];
	var v=10;
	var price=get_price(c.length-1,v,c,w)[c.length-1][v];
	
	var f=get_price(c.length-1,v,c,w);
	var p=new Array();
	p=get_way(f,c.length-1,v,c,w,p);
	
}

